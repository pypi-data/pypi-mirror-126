[metadata]
name = kiara_modules.language_processing
description = A set of modules (and pipelines) for Kiara.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/DHARPA-project/kiara_modules.language_processing
author = Markus Binsteiner
author_email = markus@frkl.io
license = MPL-2.0
license_file = LICENSE
platforms = any
classifiers = 
	Development Status :: 3 - Alpha
	License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.6
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9

[options]
packages = find_namespace:
install_requires = 
	gensim>=4.0.0
	kiara>=0.3.0
	kiara_modules.core>=0.3.0
	nltk>=3.6.0
	pandas>=1.1.5
	python-Levenshtein>=0.12.0
	spacy>=3.0.0
python_requires = >=3.6
include_package_data = True
package_dir = 
	=src
setup_requires = 
	setuptools_scm
	setuptools_scm_git_archive
zip_safe = False

[options.entry_points]
kiara.metadata_schemas = 
	language_processing = kiara_modules.language_processing.metadata_schemas:metadata_schemas
kiara.modules = 
	language = kiara_modules.language_processing:modules
kiara.pipelines = 
	language = kiara_modules.language_processing.pipelines:pipelines
kiara.value_types = 
	language_processing = kiara_modules.language_processing.value_types:value_types

[options.extras_require]
dev_documentation = 
	kiara[dev_documentation]
dev_testing = 
	coveralls>=3.2.0
	flake8>=3.8.4
	mypy>=0.800
	pytest>=6.2.2
	pytest-cov>=2.11.1
	tox>=3.21.2
	types-pkg_resources
	types-python-dateutil
dev_utils = 
	black
	cruft>=2.6.0
	flake8>=3.8.4
	ipython
	pip-licenses>=3.3.0
	pp-ez>=0.2.0
	pre-commit>=2.9.3
	setup-cfg-fmt>=1.16.0
	watchgod>=0.6
	wheel

[options.packages.find]
where = src
exclude = 
	tests

[aliases]
build = bdist_wheel
release = build upload

[bdist_wheel]
universal = 1

[devpi:upload]
no-vcs = 1
formats = sdist, bdist_wheel

[tool:pytest]
addopts = 
	--verbose
norecursedirs = 
	dist
	build
	.tox
testpaths = tests

[tox:tox]
envlist = py36, py37, py38, flake8

[testenv]
setenv = 
	PYTHONPATH = {toxinidir}
deps = 
	-e{toxinidir}[dev_testing,all]
install_command = pip install --pre --extra-index-url https://pypi.fury.io/dharpa/ --extra-index-url=https://gitlab.com/api/v4/projects/25344049/packages/pypi/simple {opts} {packages}
commands = 
	pip install -U pip
	py.test --basetemp={envtmpdir}

[testenv:flake8]
basepython = python
deps = 
	-e{toxinidir}[dev_testing,all]
	flake8
install_command = pip install --pre --extra-index-url https://pypi.fury.io/dharpa/ --extra-index-url=https://gitlab.com/api/v4/projects/25344049/packages/pypi/simple {opts} {packages}
commands = flake8 src

[coverage:run]
branch = True
source = kiara_modules.language_processing

[coverage:paths]
source = 
	src/
	*/site-packages/

[coverage:report]
exclude_lines = 
	pragma: no cover
	
	def __repr__
	if self\.debug
	
	raise AssertionError
	raise NotImplementedError
	
	if 0:
	if __name__ == .__main__.:

[flake8]
exclude = 
	.tox
	build
	dist
	.eggs
	docs/conf.py
	.git
	__pycache__
ignore = F405, W503, E501
max-line-length = 88

[isort]
profile = black

[mypy]
mypy_path = 
	src/
namespace_packages = true
plugins = pydantic.mypy

[mypy-appdirs]
ignore_missing_imports = true

[mypy-asyncclick]
ignore_missing_imports = true

[mypy-devtools]
ignore_missing_imports = true

[mypy-gensim.*]
ignore_missing_imports = true

[mypy-pandas]
ignore_missing_imports = true

[mypy-nltk.*]
ignore_missing_imports = true

[mypy-it_core_news_sm]
ignore_missing_imports = true

[mypy-networkx.*]
ignore_missing_imports = true

[mypy-pyarrow.*]
ignore_missing_imports = true

[mypy-ruamel.*]
ignore_missing_imports = true

[mypy-uvloop]
ignore_missing_imports = true

[egg_info]
tag_build = 
tag_date = 0

