# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from th2_grpc_crawler_data_service import crawler_data_service_pb2 as th2__grpc__crawler__data__service_dot_crawler__data__service__pb2


class DataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.crawlerConnect = channel.unary_unary(
                '/th2.crawler.dataservice.DataService/crawlerConnect',
                request_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.CrawlerInfo.SerializeToString,
                response_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.DataServiceInfo.FromString,
                )
        self.sendEvent = channel.unary_unary(
                '/th2.crawler.dataservice.DataService/sendEvent',
                request_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventDataRequest.SerializeToString,
                response_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventResponse.FromString,
                )
        self.sendMessage = channel.unary_unary(
                '/th2.crawler.dataservice.DataService/sendMessage',
                request_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageDataRequest.SerializeToString,
                response_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageResponse.FromString,
                )


class DataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def crawlerConnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'crawlerConnect': grpc.unary_unary_rpc_method_handler(
                    servicer.crawlerConnect,
                    request_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.CrawlerInfo.FromString,
                    response_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.DataServiceInfo.SerializeToString,
            ),
            'sendEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.sendEvent,
                    request_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventDataRequest.FromString,
                    response_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventResponse.SerializeToString,
            ),
            'sendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMessage,
                    request_deserializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageDataRequest.FromString,
                    response_serializer=th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'th2.crawler.dataservice.DataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def crawlerConnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/th2.crawler.dataservice.DataService/crawlerConnect',
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.CrawlerInfo.SerializeToString,
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.DataServiceInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/th2.crawler.dataservice.DataService/sendEvent',
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventDataRequest.SerializeToString,
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.EventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/th2.crawler.dataservice.DataService/sendMessage',
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageDataRequest.SerializeToString,
            th2__grpc__crawler__data__service_dot_crawler__data__service__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
