Metadata-Version: 2.1
Name: ewc-commons
Version: 0.0.1.5
Summary: Collection of common use stuff
Home-page: https://bitbucket.org/ewc-learning/ewc-commons/
Author: Evil Wizard Creations
Author-email: evil.wizard95@googlemail.com
License: UNKNOWN
Project-URL: Bug Reports, https://bitbucket.org/ewc-learning/ewc-commons/issues
Project-URL: Funding, https://donate.pypi.org
Project-URL: Say Thanks!, http://saythanks.io/to/example
Project-URL: Source, https://bitbucket.org/ewc-learning/ewc-commons/
Keywords: ewc,commons,dice card deck
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.7, <4
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: peppercorn
Provides-Extra: dev
Requires-Dist: check-manifest ; extra == 'dev'
Provides-Extra: test
Requires-Dist: coverage ; extra == 'test'

# EWC Commons Library #

![PyPI](https://img.shields.io/pypi/v/ewc-commons)

![PyPI - Downloads](https://img.shields.io/pypi/dm/ewc-commons)

![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ewc-commons)


A collection of common & useful things to make other things easier.

```bash
$ pip install ewc-commons[dev]
```


### Getting Started ###

* Dice Module
* Card Deck Module

### How do I get set up? ###

* Summary of set up
* Configuration
* Dependencies
* Database configuration
* How to run tests
* Deployment instructions

### Dice Module ###
```python
from ewccommons.dice import roll_d6, D4, Dice

# Just roll a standard D6 die
roll:int = roll_d6()
# Create a 4 sided named Dice object
dice:Dice = Dice(name="Piramid", sides=D4, val=None)
# Returns a new die roll
dice_roll:int = dice.roll()
# Returns the last rolled value
dice_rolled:int = dice.rolled()
```

### Card Deck Module ###
```python
from ewccommons.carddeck import (
    _Deck_,
    _Hand_,
    shuffle_deck,
    draw_card,
    new_deck,
    new_shuffled_deck,
)
        
deck: _Deck_ = new_deck()
shuffled_deck: _Deck_ = shuffle_deck(deck)
# alternitively create a new shuffled deck
shuffled_deck_alt: _Deck_ = new_shuffled_deck()

hand_size:int = 5
drawn: _Hand_
deck_remaining:_Deck_
drawn, deck_remaining = draw_card(deck=shuffled_deck, cards=hand_size)

```
### Contribution guidelines ###

* Writing tests
* Code review
* Other guidelines

### Who do I talk to? ###

* Repo owner or admin
* Other community or team contact

