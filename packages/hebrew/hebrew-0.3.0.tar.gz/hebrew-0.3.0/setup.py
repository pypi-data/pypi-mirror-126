# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['hebrew']

package_data = \
{'': ['*']}

install_requires = \
['grapheme>=0.6.0,<0.7.0']

setup_kwargs = {
    'name': 'hebrew',
    'version': '0.3.0',
    'description': 'A python package with methods to handle the complexities of Hebrew text.',
    'long_description': '<h1 align="center" style="font-family:\'Courier New\'">Hebrew("בְּרֵאשִׁ֖ית")</h1>\n<p align="center">\n    <em>A python package with methods to handle Hebrew text.</em>\n</p>\n<p align="center">\n<a href="https://pypi.org/project/hebrew/" target="_blank">\n    <img src="https://badge.fury.io/py/hebrew.svg" alt="PyPI version">\n</a>\n<a href="https://badge.fury.io/py/hebrew">\n    <img src="https://img.shields.io/pypi/pyversions/hebrew" alt="Supported Python Versions">\n</a>\n<a href="https://github.com/avi-perl/hebrew/actions/workflows/test.yml" target="_blank">\n    <img src="https://github.com/avi-perl/hebrew/actions/workflows/test.yml/badge.svg" alt="Test">\n</a>\n<a href="https://codecov.io/gh/avi-perl/hebrew" target="_blank">\n  <img src="https://codecov.io/gh/avi-perl/Hebrew/branch/master/graph/badge.svg?token=0DA1R9IY6S"/>\n</a>\n\U000e0020\U000e0020\n<a href="https://twitter.com/__aviperl__" target="_blank">\n    <img src="https://badgen.net/badge/icon/twitter?icon=twitter&label=Chat%20with%20me" alt="Twitter">\n</a>\n</p>\n\n# Installation\n```bash\n$ pip install hebrew\n```\n\n# Example\n\n`Hebrew` assists in working with Hebrew text by providing methods to handle the text according to user-perceived\ncharacteristics. Additionally, methods for common Hebrew text processing are provided.\n\n```python\n>> > from hebrew import Hebrew\n>> >\n>> > v2 = Hebrew(\n    "וְהָאָ֗רֶץ הָיְתָ֥ה תֹ֙הוּ֙ וָבֹ֔הוּ וְחֹ֖שֶׁךְ עַל־פְּנֵ֣י תְה֑וֹם וְר֣וּחַ אֱלֹהִ֔ים מְרַחֶ֖פֶת עַל־פְּנֵ֥י הַמָּֽיִם׃")\n>> >\n>> > v2.no_punctuation()\nוְהָאָרֶץ\nהָיְתָה\nתֹהוּ\nוָבֹהוּ\nוְחֹשֶׁךְ\nעַל־פְּנֵי\nתְהוֹם\nוְרוּחַ\nאֱלֹהִים\nמְרַחֶפֶת\nעַל־פְּנֵי\nהַמָּיִם׃\n>> >\n>> > v2.text_only()\nוהארץ\nהיתה\nתהו\nובהו\nוחשך\nעל־פני\nתהום\nורוח\nאלהים\nמרחפת\nעל־פני\nהמים\n>> >\n>> > v2.length\n35\n>> > v2.words(split_maqaf=True)\n[וְהָאָ֗רֶץ, הָיְתָ֥ה, תֹ֙הוּ֙, וָבֹ֔הוּ, וְחֹ֖שֶׁךְ, עַל, פְּנֵ֣י, תְה֑וֹם, וְר֣וּחַ, אֱלֹהִ֔ים, מְרַחֶ֖פֶת, עַל,\n פְּנֵ֥י, הַמָּֽיִם׃]\n```\n\n## Grapheme Characters\nHebrew text comes in different forms, depending on the context. Hebrew text may appear with Niqqudot \n"a system of diacritical signs used to represent vowels or distinguish between alternative pronunciations of letters \nof the Hebrew alphabet". [^1] Additionally, Hebrew text may appear with extensive punctuation characters that connect \nwords, separate them, and cantillation marks "used as a guide for chanting the text, either from the printed text or, \nin the case of the public reading of the Torah" [^2].   \n\nBecause of the above, from the perspective of a hebrew reader, the following 3 words are the same:\n1. **בְּרֵאשִׁ֖ית**\n2. **בְּרֵאשִׁית**\n3. **בראשית**\n\nHowever, as a unicode string, they are entirely different because of the additional characters.\n```python\n>>> len("בְּרֵאשִׁ֖ית")  # 1\n12\n>>> len("בְּרֵאשִׁית")  # 2\n11\n>>> len("בראשית")  # 3\n6  \n```\nThis impacts the user is a number of other ways. For example, if I want to get the root of this hebrew word using a slice:\n_Expected: `רֵאשִׁ֖ית`_\n```python\n>>> he = "בְּרֵאשִׁ֖ית"\n>>> he[-5:]\n\'ִׁ֖ית\'\n```\nThe solution to this is to handle the unicode string as a list of grapheme[^3] characters, where each letter and its \naccompanying characters are treated as a single unit. \n\n### Working with Grapheme Characters\nUsing the [grapheme](https://github.com/alvinlindstam/grapheme) library for python, we can work with the grapheme \ncharacters as units. This allows us to get the right number of characters, slice the string correctly, and more.\n```python\n>>> import grapheme\n>>> grapheme.length("בְּרֵאשִׁ֖ית")\n6\n>>> grapheme.slice("בְּרֵאשִׁ֖ית", start=1, end=6)\n\'רֵאשִׁ֖ית\'\n```\nThis library includes 2 classes. `GraphemeString` is a class that supports all the functions made available by `grapheme`.\nThe 2nd class `Hebrew` subclasses `GraphemeString` and adds methods for handling Hebrew text. This allows us to \ninteract with the text like so:\n```python\n>>> from hebrew import Hebrew\n>>>\n>>> v2 = Hebrew("וְהָאָ֗רֶץ הָיְתָ֥ה תֹ֙הוּ֙ וָבֹ֔הוּ וְחֹ֖שֶׁךְ עַל־פְּנֵ֣י תְה֑וֹם וְר֣וּחַ אֱלֹהִ֔ים מְרַחֶ֖פֶת עַל־פְּנֵ֥י הַמָּֽיִם׃")\n>>>\n>>> v2.no_punctuation()\nוְהָאָרֶץ הָיְתָה תֹהוּ וָבֹהוּ וְחֹשֶׁךְ עַל־פְּנֵי תְהוֹם וְרוּחַ אֱלֹהִים מְרַחֶפֶת עַל־פְּנֵי הַמָּיִם׃\n>>>\n>>> v2.text_only()\nוהארץ היתה תהו ובהו וחשך על־פני תהום ורוח אלהים מרחפת על־פני המים\n>>>\n>>> v2.length\n35\n>>> v2.words(split_maqaf=True)\n[וְהָאָ֗רֶץ, הָיְתָ֥ה, תֹ֙הוּ֙, וָבֹ֔הוּ, וְחֹ֖שֶׁךְ, עַל, פְּנֵ֣י, תְה֑וֹם, וְר֣וּחַ, אֱלֹהִ֔ים, מְרַחֶ֖פֶת, עַל, פְּנֵ֥י, הַמָּֽיִם׃]\n```\n\nThe text in these examples and used in testing were sourced from [Sefaria](https://github.com/Sefaria/Sefaria-Export).\n\n## Constants\n`Hebrew` as constants for every letter as well as lists of character category\'s:\n```python\n>>> from hebrew import Hebrew\n>>>\n>>> Hebrew.FINAL_LETTERS\n[\'ך\', \'ם\', \'ן\', \'ף\', \'ץ\']\n>>>\n>>> Hebrew(HS.ALEPH + HS.KUMATZ)\nאָ\n>>> Hebrew.YIDDISH_LETTERS\n[\'ײ\', \'װ\', \'ױ\']\n```\n\n## Future Plans\nMy intention is to override some built-in python functions for a more seamless but opinionated developer experience. \nFor example, slicing using the python `[0:1]` syntax, `len(my_he_string)`, equality checks, and more. \n`my_he_string.string` is always available when access to the true unicode characters is needed. \n\n## Contributing \nContributions in the form of pull requests are very welcome! I\'m sure many more helpful methods related to hebrew text \ncould be helpful. More information and instructions for contributing can be found [here](CONTRIBUTING.md).\n\n[^1]: [https://en.wikipedia.org/wiki/Niqqud](https://en.wikipedia.org/wiki/Niqqud)\n[^2]: [https://en.wikipedia.org/wiki/Hebrew_cantillation](https://en.wikipedia.org/wiki/Hebrew_cantillation)\n[^3]: [https://en.wikipedia.org/wiki/Grapheme](https://en.wikipedia.org/wiki/Grapheme)',
    'author': 'Avi Perl',
    'author_email': 'avi@aviperl.me',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/avi-perl/hebrew',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6.2,<4.0.0',
}


setup(**setup_kwargs)
