def function_name(number)->list:
    count=0
    tmp=number
    while True:
        j=tmp/1000
        tmp=j
        count+=1
        if 0<=j<1:
            break
    i=[]
    while True:
     a=number%1000
     i.append(a)
     number=number//1000
     if number/1000==0:
            break

    faBaseNum = {
	0:'',
	1: 'یک',
	2: 'دو',
	3: 'سه',
	4: 'چهار',
	5: 'پنج',
	6: 'شش',
	7: 'هفت',
	8: 'هشت',
	9: 'نه',
	


            }

    faBaseNum2={
	0:'',
    1: ' صد و',
	2: 'دویست و ',
	3: 'سیصد و ',
    4: 'چهارصد و ',
	5: ' پانصد و',
    6: "ششصد و",
    7: "هفتصد و",
    8:"هشتصد و",
    9:"نهصد و ",
  }

    faBaseNum3={
	0:'',

    2: 'بیست و',
	3: 'سی و',
	4: 'چهل و',
	5: 'پنجاه و',
	6: 'شصت و',
	7: 'هفتاد و',
	8: 'هشتاد و',
	9: 'نود و',
}

    faBaseNum4={

    10: 'ده',
	11: 'یازده',
	12: 'دوازده',
	13: 'سیزده',
	14: 'چهارده',
	15: 'پانزده',
	16: 'شانزده',
	17: 'هفده',
	18: 'هجده' ,
	19: 'نوزده' ,
}

    faBaseNum5={

    2: 'هزار و',
	3: 'میلیون و',
	4: 'میلیارد و',
	5: 'بیلیون و',
	6: 'بیلیارد و',
	7: 'تریلیون و',
	8: 'تریلیارد و',
	9: 'کوآدریلیون و',
	10: 'کادریلیارد و' ,
	11: 'کوینتیلیون و' ,
    12:'کوانتینیارد و',
    13: 'سکستیلیون و',
	14: 'سکستیلیارد و',
	15: 'سپتیلیون و',
	16: 'سپتیلیارد و',
	17: 'اکتیلیون و',
	18: 'اکتیلیارد و',
	19: 'نانیلیون و',
	20: 'نانیلیارد و',
	21: 'دسیلیون و' ,
	22: 'دسیلیارد و' ,
    23:'آندسیلیون و',
    24: 'آندسیلیارد و' ,
	25: 'دودسیلیون و' ,
    26:'دودسیلیارد و',
    27: 'تریدسیلیون و',
	28: 'سکستیلیارد و',
	29: 'تریدسیلیارد و',
	30: 'کوادردسیلیون و',
	31: 'کوادردسیلیارد و',
	32: 'کویندسیلیون و',
	33: 'کویندسیلیارد و',
	34: 'سیدسیلیون و',
	35: 'سیدسیلیارد و' ,
\

}

    i.reverse()
    p=list()
    for item in i:
        firstnum=item//100
        b=item-firstnum*100
        secendnum=b//10
        thirdnum=b%10
        p.append(faBaseNum2[firstnum])
        if 10<=b<=19:
            p.append(faBaseNum4[b])
        else:
            p.append( faBaseNum3[secendnum])
        if 10<=b<=19:
            pass
        else:
            p.append( faBaseNum[thirdnum])
        while True:
            if count==1:
                break
            if count >=2:
                p.append(faBaseNum5[count])
                count-=1
                break



  
    return p