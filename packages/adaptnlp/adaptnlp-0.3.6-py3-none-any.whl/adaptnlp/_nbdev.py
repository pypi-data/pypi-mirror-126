# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"SentenceResult": "00_result.ipynb",
         "GatherInputsCallback": "01_callback.ipynb",
         "SetInputsCallback": "01_callback.ipynb",
         "GeneratorCallback": "01_callback.ipynb",
         "HFModelResult": "02_model_hub.ipynb",
         "HFModelHub": "02_model_hub.ipynb",
         "FLAIR_MODELS": "02_model_hub.ipynb",
         "FlairModelResult": "02_model_hub.ipynb",
         "FlairModelHub": "02_model_hub.ipynb",
         "DataLoader.one_batch": "03_model.ipynb",
         "GatherPredsCallback.after_validate": "03_model.ipynb",
         "CudaCallback": "03_model.ipynb",
         "AdaptiveModel": "03_model.ipynb",
         "logger": "11_inference.utils.ipynb",
         "EmbeddingResult": "04_embeddings.ipynb",
         "EasyWordEmbeddings": "04_embeddings.ipynb",
         "EasyStackedEmbeddings": "04_embeddings.ipynb",
         "EasyDocumentEmbeddings": "04_embeddings.ipynb",
         "TokenClassificationResult": "05_token_classification.ipynb",
         "TransformersTokenTagger": "05_token_classification.ipynb",
         "FlairTokenTagger": "05_token_classification.ipynb",
         "EasyTokenTagger": "05_token_classification.ipynb",
         "SequenceResult": "06_sequence_classification.ipynb",
         "TransformersSequenceClassifier": "06_sequence_classification.ipynb",
         "FlairSequenceClassifier": "06_sequence_classification.ipynb",
         "EasySequenceClassifier": "06_sequence_classification.ipynb",
         "TransformersSummarizer": "07_summarization.ipynb",
         "EasySummarizer": "07_summarization.ipynb",
         "TranslationResult": "08_translation.ipynb",
         "TransformersTranslator": "08_translation.ipynb",
         "EasyTranslator": "08_translation.ipynb",
         "TransformersTextGenerator": "09_text_generation.ipynb",
         "EasyTextGenerator": "09_text_generation.ipynb",
         "QACallback": "10_question_answering.ipynb",
         "QAResult": "10_question_answering.ipynb",
         "TransformersQuestionAnswering": "10_question_answering.ipynb",
         "EasyQuestionAnswering": "10_question_answering.ipynb",
         "normalize_answer": "11_inference.utils.ipynb",
         "get_tokens": "11_inference.utils.ipynb",
         "compute_exact": "11_inference.utils.ipynb",
         "compute_f1": "11_inference.utils.ipynb",
         "get_raw_scores": "11_inference.utils.ipynb",
         "apply_no_ans_threshold": "11_inference.utils.ipynb",
         "make_eval_dict": "11_inference.utils.ipynb",
         "merge_eval": "11_inference.utils.ipynb",
         "find_best_thresh_v2": "11_inference.utils.ipynb",
         "find_all_best_thresh_v2": "11_inference.utils.ipynb",
         "find_best_thresh": "11_inference.utils.ipynb",
         "find_all_best_thresh": "11_inference.utils.ipynb",
         "squad_evaluate": "11_inference.utils.ipynb",
         "get_final_text": "11_inference.utils.ipynb",
         "compute_predictions_logits": "11_inference.utils.ipynb",
         "compute_predictions_log_probs": "11_inference.utils.ipynb",
         "ParentLabeller": "12_training.core.ipynb",
         "ColReader": "12_training.core.ipynb",
         "Categorize": "12_training.core.ipynb",
         "MultiCategorize": "12_training.core.ipynb",
         "RandomSplitter": "12_training.core.ipynb",
         "TaskDatasets": "12_training.core.ipynb",
         "AdaptiveDataLoaders": "12_training.core.ipynb",
         "AdaptiveTuner": "12_training.core.ipynb",
         "SequenceClassificationDatasets": "13_training.sequence_classification.ipynb",
         "SequenceClassificationTuner": "13_training.sequence_classification.ipynb",
         "LanguageModelDatasets": "14_training.language_model.ipynb",
         "LanguageModelTuner": "14_training.language_model.ipynb",
         "TextNoNewLine": "15_training.arrow_utils.ipynb",
         "TextNoNewLineDatasetReader": "15_training.arrow_utils.ipynb",
         "encode_tags": "17_training.token_classification.ipynb",
         "TokenClassificationDatasets": "17_training.token_classification.ipynb",
         "SeqEvalMetrics": "17_training.token_classification.ipynb",
         "TokenClassificationTuner": "17_training.token_classification.ipynb"}

modules = ["result.py",
           "callback.py",
           "model_hub.py",
           "model.py",
           "inference/embeddings.py",
           "inference/token_classification.py",
           "inference/sequence_classification.py",
           "inference/summarization.py",
           "inference/translation.py",
           "inference/text_generation.py",
           "inference/question_answering.py",
           "inference/utils.py",
           "training/core.py",
           "training/sequence_classification.py",
           "training/language_model.py",
           "training/arrow_utils.py",
           "training/token_classification.py"]

doc_url = "https://novetta.github.io/adaptnlp/"

git_url = "https://github.com/novetta/adaptnlp/tree/master/"

def custom_doc_links(name): return None
