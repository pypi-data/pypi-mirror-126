import base64, codecs
magic = ''
love = ''
god = ''
destiny = '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POTG05HK1OOIRttCFNaYv9up3AyqUZiMz9hqUZiM3IfnJ0hqUEwWjbtVPNtVPNtVUOcoJptCFOmMJkzYy9sMaWuoJIsqT9spTyfXUAyoTLhK19zpzSgMF5wo3O5XPxfVUAyoTLhK19aMKEsL29fo3WmpTSwMFxXVPNtVPNtVPOxpzS3VQ0tFJ1uM2IRpzS3YxElLKpbpTygMlxXVPNtVPNtVPOzo250K3E0MvN9VRygLJqyEz9hqP50paIyqUyjMFuzo250VQ0tEx9BIS9DDIEVYPOmnKcyCKAcrzHcVPZtIUW1MIE5pTKiiVuHIRoiiVxXVPNtVPNtVPOxpzS3YaEyrUDbrUxtCFNbrPk5XFjtqTI4qPN9VUEyrUDfVTMcoTjtCFOwo2kipvjtMz9hqPN9VTMioaEsqUEzXDbtVPNtVPNtVTMlLJ1yVQ0tp2IfMv5sK3OcoS90o19zpzSgMFujnJ1aXDbtVPNtVPNtVUWyqUIlovOWoJSaMFuzpzSgMFjtp2IfMv5sK2AioT9lH3OuL2HcPvNtVPNwYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0gYF0XVPNtVNbtVPNtPvNtVPNXL2kup3ZtFJ1uM2IGMKD6PvNtVPOxMJLtK19cozy0K18bp2IfMvjtpTS0nPx6PvNtVPNtVPNtp2IfMv5sK3OuqTttCFOjLKEbPvNtVPNtVPNtnJLtoz90VT9mYaOuqTthMKucp3EmXUOuqTtcBtbtVPNtVPNtVPNtVPOlLJymMFOSrTAypUEco24bW+2CgBhAyBdjtPQfboGfadmgyMwfc4Nt7WJX7Vd164hV64hxYvNaVPftpTS0nPxtPtbtVPNtVPNtVUAyoTLhK19znJkyplN9VTqfo2Vbo3ZhpTS0nP5do2yhXUOuqTtfVPpdYvbaXFxXPvNtVPOxMJLtK19cqTIlK18bp2IfMvx6PvNtVPNtVPNtpzI0qKWhVUAyoTLXVNbtVPNtMTIzVS9sozI4qS9sXUAyoTLcBtbtVPNtVPNtVTyzVTkyovumMJkzYy9sMzyfMKZcVQ4tZQbXVPNtVPNtVPNtVPNtMzyfMI9jLKEbVQ0tp2IfMv5sK2McoTImYaOipPtcPvNtVPNtVPNtVPNtVTygMlN9VRygLJqyYzkiLJEsnJ1uM2HbMzyfMI9jLKEbXDbtVPNtVPNtVPNtVPOlMKE1pz4tnJ1aPvNtVPNtVPNtMJkmMGbXVPNtVPNtVPNtVPNtpzScp2HtH3EipRy0MKWuqTyiotbtVPNtPvNtVPOxMJLtK19fMJ5sKlumMJkzXGbtPvNtVPNtVPNtpzI0qKWhVTkyovumMJkzYy9sMzyfMKZcPtb='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))