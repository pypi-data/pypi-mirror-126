Metadata-Version: 2.1
Name: Casabourselib
Version: 0.0.17
Summary: Like yfinance but for Moroccan stocks
Home-page: UNKNOWN
Author: Yassine Rhzif & Ahmed Ouaboune
Author-email: Rhzif@hotmail.com
License: UNKNOWN
Keywords: python,Bourse de casa,stocks,actions,actions maroc
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Description-Content-Type: text/markdown


# Casabourselib

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6d68454b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne le symbole de chaque entreprise cotee en bourse de casablanca\n",
    "get_tickers()\n",
    "#exemple d'appel :\n",
    "Casabourselib.get_tickers()\n",
    "#------------------------------- \n",
    "#une fonction qui donne le Cour de chaque entreprise cotee en bourse de casablanca\n",
    "get_stock_price(ticker, start_date, end_date)\n",
    "#exemple d'appel : \n",
    "Casabourselib.get_price('CIH', '01/01/2017', '18/10/2021')\n",
    "\n",
    "#------------------------------- \n",
    "#une fonction qui donne le Cour de l'indice boursier MADEX\n",
    "get_madex_price(periode)\n",
    "#exemple d'appel:\n",
    "Casabourselib.get_madex_price('1y') #1y jusqu'au 5year aussi pour les mois 1m ...12m\n",
    "#-------------------------------  \n",
    "#une fonction qui donne le Cour de l'indice boursier MASI\n",
    "get_masi_price(periode)\n",
    "#exemple d'appel :\n",
    "Casabourselib.get_masi_price('1y') #1y jusqu'au 5year aussi pour les mois 1m ...12m\n",
    "\n",
    "#------------------------------- \n",
    "#une fonction qui donne les dividendes distribués de chaque entreprise cotee en bourse\n",
    "get_dividends(ticker)\n",
    "#exemple d'appel :\n",
    "Casabourselib.get_dividends('CIH') \n",
    "#------------------------------- \n",
    "#une fonction qui donne les différents indicateurs économique de chaque entreprise cotee en bourse\n",
    "get_indicators(ticker)\n",
    "#exemple d'appel :\n",
    "Casabourselib.get_indicators('IAM')\n",
    "#-------------------------------  \n",
    "get_masi_data()\n",
    "#exemple d'appel:\n",
    "Casabourselib.get_masi_data()\n",
    "#-------------------------------  \n",
    "get_madex_data()\n",
    "#exemple d'appel:\n",
    "Casabourselib.get_madex_data()    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ce878721",
   "metadata": {},
   "outputs": [],
   "source": [
    "import Casabourselib  as cbl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d78f6eba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne le symbole de chaque entreprise cotee en bourse de casablanca\n",
    "get_tickers()\n",
    "#exemple d'appel:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8e327b44",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Titre</th>\n",
       "      <th>Ticker</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Addoha</td>\n",
       "      <td>ADH</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFMA</td>\n",
       "      <td>AFM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afric Indus.</td>\n",
       "      <td>AFI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afriquia Gaz</td>\n",
       "      <td>GAZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Agma</td>\n",
       "      <td>AGM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>Timar</td>\n",
       "      <td>TIM</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>TotalMaroc</td>\n",
       "      <td>TMA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Unimer</td>\n",
       "      <td>UMR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>WAFA ASSURANCE</td>\n",
       "      <td>WAA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>Zellidja</td>\n",
       "      <td>ZDJ</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>76 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             Titre Ticker\n",
       "0           Addoha    ADH\n",
       "1             AFMA    AFM\n",
       "2     Afric Indus.    AFI\n",
       "3     Afriquia Gaz    GAZ\n",
       "4             Agma    AGM\n",
       "..             ...    ...\n",
       "71           Timar    TIM\n",
       "72      TotalMaroc    TMA\n",
       "73          Unimer    UMR\n",
       "74  WAFA ASSURANCE    WAA\n",
       "75        Zellidja    ZDJ\n",
       "\n",
       "[76 rows x 2 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cbl.get_tickers()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb6d15ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne le Cour de chaque entreprise cotee en bourse de casablanca\n",
    "get_stock_price(ticker, from_date, to_date)\n",
    "#exemple d'appel: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "832ad54b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>variation</th>\n",
       "      <th>volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>02/01/2017</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-100.00</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>03/01/2017</th>\n",
       "      <td>310.00</td>\n",
       "      <td>300.00</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3.33</td>\n",
       "      <td>347.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>04/01/2017</th>\n",
       "      <td>305.40</td>\n",
       "      <td>302.00</td>\n",
       "      <td>310.00</td>\n",
       "      <td>-1.48</td>\n",
       "      <td>36480.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>05/01/2017</th>\n",
       "      <td>311.00</td>\n",
       "      <td>306.15</td>\n",
       "      <td>315.00</td>\n",
       "      <td>1.83</td>\n",
       "      <td>14916.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>06/01/2017</th>\n",
       "      <td>325.00</td>\n",
       "      <td>320.00</td>\n",
       "      <td>330.00</td>\n",
       "      <td>4.50</td>\n",
       "      <td>128910.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12/10/2021</th>\n",
       "      <td>315.10</td>\n",
       "      <td>315.00</td>\n",
       "      <td>323.00</td>\n",
       "      <td>-0.91</td>\n",
       "      <td>749.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13/10/2021</th>\n",
       "      <td>320.00</td>\n",
       "      <td>315.10</td>\n",
       "      <td>320.00</td>\n",
       "      <td>1.56</td>\n",
       "      <td>5542.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14/10/2021</th>\n",
       "      <td>320.00</td>\n",
       "      <td>317.00</td>\n",
       "      <td>320.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1047.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15/10/2021</th>\n",
       "      <td>320.95</td>\n",
       "      <td>314.00</td>\n",
       "      <td>321.85</td>\n",
       "      <td>0.30</td>\n",
       "      <td>2703.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18/10/2021</th>\n",
       "      <td>325.00</td>\n",
       "      <td>316.00</td>\n",
       "      <td>325.00</td>\n",
       "      <td>1.26</td>\n",
       "      <td>31831.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1189 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             value     min     max  variation    volume\n",
       "date                                                   \n",
       "02/01/2017     NaN     NaN     NaN    -100.00       NaN\n",
       "03/01/2017  310.00  300.00  310.00       3.33     347.0\n",
       "04/01/2017  305.40  302.00  310.00      -1.48   36480.0\n",
       "05/01/2017  311.00  306.15  315.00       1.83   14916.0\n",
       "06/01/2017  325.00  320.00  330.00       4.50  128910.0\n",
       "...            ...     ...     ...        ...       ...\n",
       "12/10/2021  315.10  315.00  323.00      -0.91     749.0\n",
       "13/10/2021  320.00  315.10  320.00       1.56    5542.0\n",
       "14/10/2021  320.00  317.00  320.00       0.00    1047.0\n",
       "15/10/2021  320.95  314.00  321.85       0.30    2703.0\n",
       "18/10/2021  325.00  316.00  325.00       1.26   31831.0\n",
       "\n",
       "[1189 rows x 5 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cbl.get_stock_price('CIH', '01/01/2017', '18/10/2021')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "553ca03d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne le Cours de l'indice boursier MADEX\n",
    "get_madex_price(periode)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a50f425f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>09/11/2020</th>\n",
       "      <td>8587.8335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10/11/2020</th>\n",
       "      <td>8622.4817</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11/11/2020</th>\n",
       "      <td>8603.3549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12/11/2020</th>\n",
       "      <td>8626.6573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13/11/2020</th>\n",
       "      <td>8673.0717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/11/2021</th>\n",
       "      <td>10946.7580</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>02/11/2021</th>\n",
       "      <td>10995.6448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>03/11/2021</th>\n",
       "      <td>10991.2126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>04/11/2021</th>\n",
       "      <td>10927.7211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>05/11/2021</th>\n",
       "      <td>10848.1172</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>248 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 value\n",
       "date                  \n",
       "09/11/2020   8587.8335\n",
       "10/11/2020   8622.4817\n",
       "11/11/2020   8603.3549\n",
       "12/11/2020   8626.6573\n",
       "13/11/2020   8673.0717\n",
       "...                ...\n",
       "01/11/2021  10946.7580\n",
       "02/11/2021  10995.6448\n",
       "03/11/2021  10991.2126\n",
       "04/11/2021  10927.7211\n",
       "05/11/2021  10848.1172\n",
       "\n",
       "[248 rows x 1 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exemple d'appel:\n",
    "lb.get_madex_price('1y') #1y jusqu'au 5year aussi pour les mois 1m ...12m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d14c8115",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne le Cour de l'indice boursier MASI\n",
    "get_masi_price(periode)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bde60563",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>07/11/2016</th>\n",
       "      <td>10521.9671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>08/11/2016</th>\n",
       "      <td>10553.5579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>09/11/2016</th>\n",
       "      <td>10580.2624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10/11/2016</th>\n",
       "      <td>10564.6172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11/11/2016</th>\n",
       "      <td>10551.4266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>01/11/2021</th>\n",
       "      <td>13507.5453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>02/11/2021</th>\n",
       "      <td>13562.6362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>03/11/2021</th>\n",
       "      <td>13569.3304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>04/11/2021</th>\n",
       "      <td>13506.9925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>05/11/2021</th>\n",
       "      <td>13413.8017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1240 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 value\n",
       "date                  \n",
       "07/11/2016  10521.9671\n",
       "08/11/2016  10553.5579\n",
       "09/11/2016  10580.2624\n",
       "10/11/2016  10564.6172\n",
       "11/11/2016  10551.4266\n",
       "...                ...\n",
       "01/11/2021  13507.5453\n",
       "02/11/2021  13562.6362\n",
       "03/11/2021  13569.3304\n",
       "04/11/2021  13506.9925\n",
       "05/11/2021  13413.8017\n",
       "\n",
       "[1240 rows x 1 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exemple d'appel :\n",
    "cbl.get_masi_price('5y') #1y jusqu'au 5year aussi pour les mois 1m ...12m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a55a284",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne les dividendes distribués de chaque entreprise cotee en bourse\n",
    "get_dividends(ticker)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "39372ad6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dividende Ordinaire</th>\n",
       "      <th>Date de détachement</th>\n",
       "      <th>Date de paiement</th>\n",
       "      <th>Dividende Exceptionnel</th>\n",
       "      <th>Date de détachement.1</th>\n",
       "      <th>Date de paiement.1</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Année</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>8.00</td>\n",
       "      <td>07/07/2021</td>\n",
       "      <td>16/07/2021</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>14.00</td>\n",
       "      <td>21/09/2020</td>\n",
       "      <td>30/09/2020</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>14.00</td>\n",
       "      <td>26/06/2019</td>\n",
       "      <td>05/07/2019</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>14.00</td>\n",
       "      <td>27/06/2018</td>\n",
       "      <td>06/07/2018</td>\n",
       "      <td>2.00</td>\n",
       "      <td>27/06/2018</td>\n",
       "      <td>06/07/2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>14.00</td>\n",
       "      <td>28/06/2017</td>\n",
       "      <td>07/07/2017</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>14.00</td>\n",
       "      <td>27/06/2016</td>\n",
       "      <td>11/07/2016</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>14.00</td>\n",
       "      <td>26/06/2015</td>\n",
       "      <td>07/07/2015</td>\n",
       "      <td>2.00</td>\n",
       "      <td>26/06/2015</td>\n",
       "      <td>07/07/2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>15.00</td>\n",
       "      <td>25/06/2014</td>\n",
       "      <td>04/07/2014</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>14.00</td>\n",
       "      <td>20/06/2013</td>\n",
       "      <td>01/07/2013</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>11.00</td>\n",
       "      <td>21/06/2012</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>6.00</td>\n",
       "      <td>22/06/2011</td>\n",
       "      <td>01/07/2011</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>6.00</td>\n",
       "      <td>22/06/2010</td>\n",
       "      <td>01/07/2010</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>18.00</td>\n",
       "      <td>07/08/2009</td>\n",
       "      <td>29/09/2009</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>10.00</td>\n",
       "      <td>19/09/2008</td>\n",
       "      <td>24/09/2008</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Dividende Ordinaire Date de détachement Date de paiement  \\\n",
       "Année                                                            \n",
       "2020                 8.00          07/07/2021       16/07/2021   \n",
       "2019                14.00          21/09/2020       30/09/2020   \n",
       "2018                14.00          26/06/2019       05/07/2019   \n",
       "2017                14.00          27/06/2018       06/07/2018   \n",
       "2016                14.00          28/06/2017       07/07/2017   \n",
       "2015                14.00          27/06/2016       11/07/2016   \n",
       "2014                14.00          26/06/2015       07/07/2015   \n",
       "2013                15.00          25/06/2014       04/07/2014   \n",
       "2012                14.00          20/06/2013       01/07/2013   \n",
       "2011                11.00          21/06/2012       02/07/2012   \n",
       "2010                 6.00          22/06/2011       01/07/2011   \n",
       "2009                 6.00          22/06/2010       01/07/2010   \n",
       "2008                18.00          07/08/2009       29/09/2009   \n",
       "2007                10.00          19/09/2008       24/09/2008   \n",
       "2006                    -                   -                -   \n",
       "2005                    -                   -                -   \n",
       "2004                    -                   -                -   \n",
       "2003                    -                   -                -   \n",
       "2002                    -                   -                -   \n",
       "\n",
       "      Dividende Exceptionnel Date de détachement.1 Date de paiement.1  \n",
       "Année                                                                  \n",
       "2020                       -                     -                  -  \n",
       "2019                       -                     -                  -  \n",
       "2018                       -                     -                  -  \n",
       "2017                    2.00            27/06/2018         06/07/2018  \n",
       "2016                       -                     -                  -  \n",
       "2015                       -                     -                  -  \n",
       "2014                    2.00            26/06/2015         07/07/2015  \n",
       "2013                       -                     -                  -  \n",
       "2012                       -                     -                  -  \n",
       "2011                       -                     -                  -  \n",
       "2010                       -                     -                  -  \n",
       "2009                       -                     -                  -  \n",
       "2008                       -                     -                  -  \n",
       "2007                       -                     -                  -  \n",
       "2006                       -                     -                  -  \n",
       "2005                       -                     -                  -  \n",
       "2004                       -                     -                  -  \n",
       "2003                       -                     -                  -  \n",
       "2002                       -                     -                  -  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exemple d'appel :\n",
    "cbl.get_dividends('CIH') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "33bb65c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#une fonction qui donne les différents indicateurs économique de chaque entreprise cotee en bourse\n",
    "get_indicators(ticker)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "bd0d04a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>2020</th>\n",
       "      <th>2019</th>\n",
       "      <th>2018</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chiffres</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Comptes consolidés</th>\n",
       "      <td>Oui</td>\n",
       "      <td>Oui</td>\n",
       "      <td>Oui</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Capital social (2)</th>\n",
       "      <td>2 832 473 500</td>\n",
       "      <td>2 832 473 500</td>\n",
       "      <td>2 660 808 500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Capitaux propres (3)</th>\n",
       "      <td>5 424 245 000</td>\n",
       "      <td>5 487 522 000</td>\n",
       "      <td>5 121 960 000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nombre titres(2)</th>\n",
       "      <td>28 324 735</td>\n",
       "      <td>28 324 735</td>\n",
       "      <td>26 608 085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Produit Net bancaire</th>\n",
       "      <td>2 759 674 000</td>\n",
       "      <td>2 501 863 000</td>\n",
       "      <td>2 248 842 000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Résultat d'exploitation</th>\n",
       "      <td>67 190 000</td>\n",
       "      <td>691 771 000</td>\n",
       "      <td>603 042 000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Résultat net (4)</th>\n",
       "      <td>80 655 000</td>\n",
       "      <td>426 382 000</td>\n",
       "      <td>455 043 000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>BPA</th>\n",
       "      <td>2.85</td>\n",
       "      <td>15.05</td>\n",
       "      <td>17.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ROE (en %)</th>\n",
       "      <td>1.49</td>\n",
       "      <td>7.77</td>\n",
       "      <td>8.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Payout (en %)</th>\n",
       "      <td>-</td>\n",
       "      <td>93.00</td>\n",
       "      <td>81.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dividend yield (en %)</th>\n",
       "      <td>-</td>\n",
       "      <td>4.68</td>\n",
       "      <td>4.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PER</th>\n",
       "      <td>89.55</td>\n",
       "      <td>19.86</td>\n",
       "      <td>17.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>PBR</th>\n",
       "      <td>1.33</td>\n",
       "      <td>1.54</td>\n",
       "      <td>1.56</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  2020           2019           2018\n",
       "Chiffres                                                            \n",
       "Comptes consolidés                 Oui            Oui            Oui\n",
       "Capital social (2)       2 832 473 500  2 832 473 500  2 660 808 500\n",
       "Capitaux propres (3)     5 424 245 000  5 487 522 000  5 121 960 000\n",
       "Nombre titres(2)            28 324 735     28 324 735     26 608 085\n",
       "Produit Net bancaire     2 759 674 000  2 501 863 000  2 248 842 000\n",
       "Résultat d'exploitation     67 190 000    691 771 000    603 042 000\n",
       "Résultat net (4)            80 655 000    426 382 000    455 043 000\n",
       "BPA                               2.85          15.05          17.10\n",
       "ROE (en %)                        1.49           7.77           8.88\n",
       "Payout (en %)                        -          93.00          81.86\n",
       "Dividend yield (en %)                -           4.68           4.67\n",
       "PER                              89.55          19.86          17.54\n",
       "PBR                               1.33           1.54           1.56"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exemple d'appel :\n",
    "cbl.get_indicators('CIH')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0fc1dcd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "get_masi_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "82a16326",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Code Isin</th>\n",
       "      <th></th>\n",
       "      <th>Instrument</th>\n",
       "      <th></th>\n",
       "      <th>Nombre de titres</th>\n",
       "      <th></th>\n",
       "      <th>Cours</th>\n",
       "      <th></th>\n",
       "      <th>Facteur flottant</th>\n",
       "      <th></th>\n",
       "      <th>Facteur de plafonnement</th>\n",
       "      <th></th>\n",
       "      <th>Capitalisation flottante</th>\n",
       "      <th></th>\n",
       "      <th>Poids</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td></td>\n",
       "      <td>MA0000012445</td>\n",
       "      <td></td>\n",
       "      <td>ATTIJARIWAFA BANK</td>\n",
       "      <td></td>\n",
       "      <td>215 140 839</td>\n",
       "      <td></td>\n",
       "      <td>496,50</td>\n",
       "      <td></td>\n",
       "      <td>0,30</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>32 045 227 969,05</td>\n",
       "      <td></td>\n",
       "      <td>0,1825</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td></td>\n",
       "      <td>MA0000011488</td>\n",
       "      <td></td>\n",
       "      <td>ITISSALAT AL-MAGHRIB</td>\n",
       "      <td></td>\n",
       "      <td>879 095 340</td>\n",
       "      <td></td>\n",
       "      <td>143,50</td>\n",
       "      <td></td>\n",
       "      <td>0,20</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>25 230 036 258,00</td>\n",
       "      <td></td>\n",
       "      <td>0,1437</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td></td>\n",
       "      <td>MA0000012320</td>\n",
       "      <td></td>\n",
       "      <td>LAFARGEHOLCIM MAR</td>\n",
       "      <td></td>\n",
       "      <td>23 431 240</td>\n",
       "      <td></td>\n",
       "      <td>2220,00</td>\n",
       "      <td></td>\n",
       "      <td>0,30</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>15 605 205 840,00</td>\n",
       "      <td></td>\n",
       "      <td>0,0889</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td></td>\n",
       "      <td>MA0000011884</td>\n",
       "      <td></td>\n",
       "      <td>BCP</td>\n",
       "      <td></td>\n",
       "      <td>203 312 473</td>\n",
       "      <td></td>\n",
       "      <td>282,50</td>\n",
       "      <td></td>\n",
       "      <td>0,20</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>11 487 154 724,50</td>\n",
       "      <td></td>\n",
       "      <td>0,0654</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td></td>\n",
       "      <td>MA0000012247</td>\n",
       "      <td></td>\n",
       "      <td>COSUMAR</td>\n",
       "      <td></td>\n",
       "      <td>94 487 143</td>\n",
       "      <td></td>\n",
       "      <td>270,00</td>\n",
       "      <td></td>\n",
       "      <td>0,40</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>10 204 611 444,00</td>\n",
       "      <td></td>\n",
       "      <td>0,0581</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td></td>\n",
       "      <td>MA0000011132</td>\n",
       "      <td></td>\n",
       "      <td>IB MAROC.COM</td>\n",
       "      <td></td>\n",
       "      <td>417 486</td>\n",
       "      <td></td>\n",
       "      <td>46,73</td>\n",
       "      <td></td>\n",
       "      <td>0,45</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>8 779 104,35</td>\n",
       "      <td></td>\n",
       "      <td>0,0000</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td></td>\n",
       "      <td>MA0000011686</td>\n",
       "      <td></td>\n",
       "      <td>TIMAR</td>\n",
       "      <td></td>\n",
       "      <td>301 100</td>\n",
       "      <td></td>\n",
       "      <td>144,60</td>\n",
       "      <td></td>\n",
       "      <td>0,20</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>8 707 812,00</td>\n",
       "      <td></td>\n",
       "      <td>0,0000</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td></td>\n",
       "      <td>MA0000010571</td>\n",
       "      <td></td>\n",
       "      <td>ZELLIDJA S.A</td>\n",
       "      <td></td>\n",
       "      <td>572 849</td>\n",
       "      <td></td>\n",
       "      <td>87,00</td>\n",
       "      <td></td>\n",
       "      <td>0,10</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>4 983 786,30</td>\n",
       "      <td></td>\n",
       "      <td>0,0000</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td></td>\n",
       "      <td>MA0000010993</td>\n",
       "      <td></td>\n",
       "      <td>REBAB COMPANY</td>\n",
       "      <td></td>\n",
       "      <td>176 456</td>\n",
       "      <td></td>\n",
       "      <td>107,95</td>\n",
       "      <td></td>\n",
       "      <td>0,20</td>\n",
       "      <td></td>\n",
       "      <td>1,00</td>\n",
       "      <td></td>\n",
       "      <td>3 809 685,04</td>\n",
       "      <td></td>\n",
       "      <td>0,0000</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>Total</td>\n",
       "      <td></td>\n",
       "      <td>2 680 176 515,00</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>175 629 484 694,18</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>75 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          Code Isin               Instrument      Nombre de titres     \\\n",
       "0      MA0000012445        ATTIJARIWAFA BANK           215 140 839      \n",
       "1      MA0000011488     ITISSALAT AL-MAGHRIB           879 095 340      \n",
       "2      MA0000012320        LAFARGEHOLCIM MAR            23 431 240      \n",
       "3      MA0000011884                      BCP           203 312 473      \n",
       "4      MA0000012247                  COSUMAR            94 487 143      \n",
       ".. ..           ... ..                   ... ..                ... ..   \n",
       "70     MA0000011132             IB MAROC.COM               417 486      \n",
       "71     MA0000011686                    TIMAR               301 100      \n",
       "72     MA0000010571             ZELLIDJA S.A               572 849      \n",
       "73     MA0000010993            REBAB COMPANY               176 456      \n",
       "74                                     Total      2 680 176 515,00      \n",
       "\n",
       "      Cours    Facteur flottant    Facteur de plafonnement     \\\n",
       "0    496,50                0,30                       1,00      \n",
       "1    143,50                0,20                       1,00      \n",
       "2   2220,00                0,30                       1,00      \n",
       "3    282,50                0,20                       1,00      \n",
       "4    270,00                0,40                       1,00      \n",
       "..      ... ..              ... ..                     ... ..   \n",
       "70    46,73                0,45                       1,00      \n",
       "71   144,60                0,20                       1,00      \n",
       "72    87,00                0,10                       1,00      \n",
       "73   107,95                0,20                       1,00      \n",
       "74                                                              \n",
       "\n",
       "   Capitalisation flottante      Poids     \n",
       "0         32 045 227 969,05     0,1825     \n",
       "1         25 230 036 258,00     0,1437     \n",
       "2         15 605 205 840,00     0,0889     \n",
       "3         11 487 154 724,50     0,0654     \n",
       "4         10 204 611 444,00     0,0581     \n",
       "..                      ... ..     ... ..  \n",
       "70             8 779 104,35     0,0000     \n",
       "71             8 707 812,00     0,0000     \n",
       "72             4 983 786,30     0,0000     \n",
       "73             3 809 685,04     0,0000     \n",
       "74       175 629 484 694,18                \n",
       "\n",
       "[75 rows x 17 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#exemple d'appel :\n",
    "cbl.get_masi_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fda637d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "get_madex_data()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "77a550a5",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "type object 'object' has no attribute 'dtype'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-6-ca093bdec003>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mlb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_madex_data\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32mc:\\users\\hp elitebook 840 g3\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\Casabourselib\\Casabourselib.py\u001b[0m in \u001b[0;36mget_madex_data\u001b[1;34m()\u001b[0m\n\u001b[0;32m    746\u001b[0m     \u001b[0mcolumns_\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'Code Isin'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Instrument'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Nombre de titres'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Cours'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Facteur flottant'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Facteur de plafonnement'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Capitalisation flottante'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'Poids'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    747\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 748\u001b[1;33m     \u001b[0mdf\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[1;33m(\u001b[0m \u001b[0mcolumns\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mcolumns_\u001b[0m \u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    749\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    750\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcode\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\hp elitebook 840 g3\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36m__init__\u001b[1;34m(self, data, index, columns, dtype, copy)\u001b[0m\n\u001b[0;32m    433\u001b[0m             )\n\u001b[0;32m    434\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdict\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 435\u001b[1;33m             \u001b[0mmgr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0minit_dict\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    436\u001b[0m         \u001b[1;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mma\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mMaskedArray\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    437\u001b[0m             \u001b[1;32mimport\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mma\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmrecords\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mmrecords\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\hp elitebook 840 g3\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pandas\\core\\internals\\construction.py\u001b[0m in \u001b[0;36minit_dict\u001b[1;34m(data, index, columns, dtype)\u001b[0m\n\u001b[0;32m    237\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    238\u001b[0m                 \u001b[0mnan_dtype\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 239\u001b[1;33m             \u001b[0mval\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mconstruct_1d_arraylike_from_scalar\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnan_dtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    240\u001b[0m             \u001b[0marrays\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mmissing\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0mval\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m*\u001b[0m \u001b[0mmissing\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msum\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    241\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32mc:\\users\\hp elitebook 840 g3\\appdata\\local\\programs\\python\\python38-32\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\u001b[0m in \u001b[0;36mconstruct_1d_arraylike_from_scalar\u001b[1;34m(value, length, dtype)\u001b[0m\n\u001b[0;32m   1438\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1439\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1440\u001b[1;33m             \u001b[0mdtype\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdtype\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1441\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1442\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mlength\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0mis_integer_dtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;32mand\u001b[0m \u001b[0misna\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mAttributeError\u001b[0m: type object 'object' has no attribute 'dtype'"
     ]
    }
   ],
   "source": [
    "cbl.get_madex_data()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}


