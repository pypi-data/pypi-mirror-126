define(["jquery","base/js/keyboard","require","base/js/namespace","base/js/dialog","base/js/i18n","notebook/js/codecell","codemirror/lib/codemirror","module"],(function(e,t,o,n,s,r,i,a,l){"use strict";const c="["+l.id+"]",u="https://uploads-ssl.webflow.com/61294dc1bd225d7c490b4389/6131d7249979f73249363dd0_icon_black_64.png";let p={suggestion_opacity:.5,suggestion_accept_delay:6e5,auto_query_delay:300,cursor_blink_rate:530,upgrade_message_timeout:12e4,should_prepend_imports:!0,auto_submit:!0,demo_mode:!1,temperature:.2,n_suggestions:2,prompt_presets:"",backend_url:"https://api.cogram.ai"},d={is_open:!1,current_choice_idx:void 0,choices:[],considering_choices:!1,suggestionAcceptTimeout:void 0,version_is_up_to_date:void 0,queryTimeout:void 0,pre_cursor:void 0,post_cursor:void 0,pre_cursor_plus_code:void 0,pre_cursor_plus_imports:void 0,pre_cursor_plus_imports_code:void 0,suggestion:void 0,auth_token:void 0,current_completion_query:void 0,submission_metadata:{},previous_suggestion_metadata:{},suggestion_start_line_number:void 0,suggestion_end_line_number:void 0,is_launch:!1,timeouts:{},current_cell_index:0},g=i.CodeCell,_=t.keycodes,m=[_.esc,_.shift,_.ctrl,_.alt,_.meta,_.capslock,_.pageup,_.pagedown,_.end,_.home,_.insert,_.delete,_.numlock,_.f1,_.f2,_.f3,_.f4,_.f5,_.f6,_.f7,_.f8,_.f9,_.f10,_.f11,_.f12,_.f13,_.f14,_.f15];const h=e=>{const t=document.cookie.match("\\b"+e+"=([^;]*)\\b");return t?t[1]:void 0},f=()=>n.notebook.get_selected_cell(d.current_cell_index),y=(navigator.platform.toUpperCase().indexOf("MAC"),e=>{const t=e.split("\n");if(0===t.length)return[0,0];return[t.length-1,t.slice(-1)[0].length]}),b=({text:e,_cell:t})=>{const[o,n]=y(e);t||(t=f()),t.code_mirror.setCursor(o,n)},k=(e,t,o)=>{e.code_mirror.options[t]=o},v=(e,t,o,n)=>{e.code_mirror.markText(t,o,{css:`opacity:${n};`})},x=e=>{const t=y(e);return{line:t[0],ch:t[1]}},T=()=>{const e=S()??"",t=d.choices[d.current_choice_idx].suggestion;(e=>{let t=d.post_cursor;if(!t)return;const o=t.split("\n"),n=o[0];if(1===n.length||e.includes(n)){let e=o.slice(1).join("\n");d.post_cursor=e}})(t);const o=d.pre_cursor+t,n=e+d.pre_cursor,s=n+t;d.suggestion=t,d.pre_cursor_plus_code=o,d.pre_cursor_plus_imports=n,d.pre_cursor_plus_imports_code=s;const r=n.split("\n").length,i=n.split("\n").length;d.suggestion_start_line_number=r,d.suggestion_end_line_number=i},C=()=>{void 0!==d.suggestionAcceptTimeout&&clearTimeout(d.suggestionAcceptTimeout)},S=()=>{const e=d.choices[d.current_choice_idx].imports;if(e)return e+"\n\n"},$=()=>{if(!d.considering_choices)return;const e=f();(e=>{const t=S(e);p.should_prepend_imports&&t&&e.set_text(d.pre_cursor_plus_imports_code)})(e);const t=x(d.pre_cursor_plus_imports_code);v(e,{line:0,ch:0},t,1),b({text:d.pre_cursor_plus_imports_code,_cell:e}),ge(),w()},w=()=>{d.considering_choices=!1,d.choices=[],d.pre_cursor=void 0,d.post_cursor=void 0,d.submission_metadata={}},j=()=>{let t=e(".cogram-demo-hint");if(t.length){let e=f();t.remove(),k(e,"cursorBlinkRate",p.cursor_blink_rate);const o=x(d.pre_cursor_plus_imports_code);e.code_mirror.setSelection(o)}},q=e=>new Promise((t=>setTimeout(t,e))),N=async(e,t)=>{let o,n=t.split("\n"),s=e.line,r=[];return n.forEach((t=>{let n=s===e.line?e.ch:0;o={line:s,ch:n+t.length},r.push({anchor:{line:s,ch:n},head:o}),++s})),await q(1),de(`<img id="cogram-button-logo" src="${u}" style="max-height:16px;"alt="Cogram"> Cogram`,"cogram-demo-hint","+=9"),k(f(),"cursorBlinkRate",-1),f().code_mirror.setSelections(r),o},O=async()=>{const t=x(d.pre_cursor_plus_imports);if(N(t,d.suggestion),Q(),p.demo_mode)$();else{$(),await q(1);let t=e("#cogram-hint");t.css("opacity","0"),t.bind("transitionend",(()=>{j()})),t=e(".CodeMirror-selected"),t.css("opacity","0")}},R=()=>{T();let e=f();d.current_completion_query=void 0,d.considering_choices=!0,_e(),C();const t=d.pre_cursor_plus_code+d.post_cursor;e.set_text(t);const o=x(d.pre_cursor),n=x(d.pre_cursor_plus_code);v(e,o,n,p.suggestion_opacity),b({text:d.pre_cursor,_cell:e})},D=t=>{t?e("#cogram-spinner").addClass("fa-spin").css("color","orange"):e("#cogram-spinner").removeClass("fa-spin").css("color","green")},A=(t=!1)=>{let o=n.notebook.get_cells().map((e=>e.get_text())).slice(0,p.current_cell_index+1);o.pop();let s=f();d.pre_cursor=s.get_pre_cursor(),d.post_cursor=(e=>e.get_post_cursor())(s);let r=d.pre_cursor;const i=(a=`${r} ${+Date.now()}`,Math.abs((e=>{var t,o=0;if(0===e.length)return o;for(t=0;t<e.length;t++)o=(o<<5)-o+e.charCodeAt(t),o|=0;return o})(a)).toString(16));var a;let l=s.get_text().startsWith("%%sql")?"sql":"python";let c={queries:[r],cell_contents:o,auth_token:d.auth_token,n_suggestions:p.n_suggestions,temperature:p.temperature,prompt_presets:p.prompt_presets,language:l,backend_url:p.backend_url,auto_submit:t,query_hash:i};d.submission_metadata={query_length:d.pre_cursor.length,query_hash:i,n_cells:o.length,language:l,n_suggestions:c.n_suggestions,temperature:c.temperature,auto_submit:t},ke("Query submitted",d.submission_metadata);const u=h("_xsrf");d.current_completion_query=e.post({url:"/cogram",data:JSON.stringify(c),headers:{"X-XSRFToken":u},dataType:"json",contentType:"application/json",beforeSend:function(e){D(!0)},success:function(e){((e,t)=>{let o=t.message;o=o.filter((e=>""!==e.suggestion.trim())),d.submission_metadata={...d.submission_metadata,n_suggestions_returned:o.length},ke("Suggestions received",d.submission_metadata),o.length>0&&(d.choices=o,d.current_choice_idx=0,T(),R())})(0,e)},error:ne,complete:function(){D(!1)}})},J=(t=!1)=>{const o="boolean"==typeof t&&t;console.log(c,"Checking if valid token exists with `logLaunch`=",o);let n=null;return e.get({url:"/token",dataType:"JSON",data:{log_launch:o},async:!1,success:function(e){var t;t=e,d.auth_token=t.auth_token,n="ok"},error:function(e,t,o){n=((e,t,o)=>{d.auth_token=void 0,console.log(c,"`checkValidTokenExists` ajax error:",e,t,o);const n=e.status;if(500===n)return"unavailable";if(403==n){let t=JSON.parse(e.responseText);return console.log(c,"Returning 403 error",t),t?.error}return null})(e,t,o)}}),console.log(c,"check completed. status",n),n},E=()=>(e("body").on("click","#upgrade_button",(()=>{e("#upgrade_button").html('<i class="fa fa-spinner fa-spin" aria-hidden="true"></i>'),ke("Upgrade button clicked"),ve()})),'<button id="upgrade_button" class="mui-btn mui-btn--primary">Upgrade</button>'),P=(e,t,o)=>{console.log(c,"In /checkVersion error callback"),d.version_is_up_to_date=!1;let n=JSON.parse(e.responseText);console.log(c,n);let s=n?.pypi_version;let r=`<div class="mui--text-subhead">A new version of Jupyter Cogram is out  🎈<span class="mui--text-body2"><div style="line-height:120%;"><br></div>Click here to automatically upgrade to version ${s}</span></div>`+E()+'<span class="mui--text-body1"><br>Alternatively, you can upgrade to manually by running<br><span style="font-family:monospace">pip install -U jupyter-cogram</span> <br>in your terminal. Afterwards, please restart your Jupyter Notebook server.</span>';ce(r,p.upgrade_message_timeout)},U=(e,t,o=500)=>{d.timeouts[e]&&clearTimeout(d.timeouts[e]),d.timeouts[e]=setTimeout(t,o)},X=(t,o,n=null)=>{U(`config-track-${t}`,(()=>ke("Config updated",{parameter:t,new_value:o,old_value:n}))),U(`config-update-${t}`,(()=>e.ajax({url:"/config",type:"PUT",data:JSON.stringify({[t]:o}),headers:{"X-XSRFToken":h("_xsrf")},dataType:"json",contentType:"application/json",success:function(){},error:function(e,t,o){let n=JSON.parse(e.responseText),s=`Error ${e.status}: ${n.error}`;console.log("Have error msg from `updateConfig()`",s)}})))};const H=t=>{const o=!d.is_launch;t?(o&&ke("Extension turned on"),console.log(c,"Extension is off. Turning it on."),e("#cogram-status, #cogram-config").show(),d.is_open=!0):(o&&ke("Extension turned off"),console.log(c,"Extension is on. Turning it off."),e("#cogram-status, #cogram-config").hide(),d.is_open=!1)},I=t=>{t.attr("id","info-panel-content"),console.log("Showing panel with content",t),e("#info-panel-content").remove(),e("#jupyter-cogram-info-panel").append(t),e("#jupyter-cogram-info-panel").show()},M=(t=!1)=>{if(console.log(c,"Toggline editor with log launch",t),d.is_open)return void H(!1);const o=J(t);console.log(c,"Valid token exists:",o),"ok"===o?(e("#jupyter-cogram-info-panel").hide(),H(!0)):"unavailable"===o?le(he,1e4):o?I(ue(o)):(I(ue()),H(!1))};function F(e){return e.ctrlKey||e.metaKey||e.shiftKey||e.altKey}function L(e){const t=e.which;return t===_.left||t===_.right}function K(e){const t=e.which;return t===_.up||t===_.down}const B=e=>e.which===_.tab,W=e=>e.which===_.backspace,V=e=>{const t=d.current_choice_idx,o=d.choices.length;if(1===o)return;let n;n=e?t<=o-2?t+1:0:t>0?t-1:o-1,d.current_choice_idx=n,ke("Cycled through suggestion",{...d.submission_metadata,previous_index:t,new_index:n,direction:e?"right":"left"})};const z=()=>{const e=f(),t=e.code_mirror.getCursor().line,o=e.code_mirror.getCursor().ch;return e.code_mirror.getLine(t).length===o},Q=()=>{d.previous_suggestion_metadata={cell_index:n.notebook.get_selected_index(),suggestion_start_line_number:d.suggestion_start_line_number,suggestion_end_line_number:d.suggestion_end_line_number,query_hash:d.submission_metadata?.query_hash}},Y=()=>{ke("Suggestion accepted",d.submission_metadata),e("#hint-accept-link").click()};function G(e){var t;(t=f()).get_text().split("\n")[t.code_mirror.getCursor().line].trim();const o=z();return d.is_open&&d.considering_choices?(Y(),e.preventDefault(),!0):!(!d.is_open||!o)&&(ee(0),e.preventDefault(),!0)}const Z=()=>{let e=f().get_text().split("\n");if(0===e.length)return!1;let t=e[e.length-1];return!!t.startsWith("#")||(!!(e.length>1&&e[e.length-2].startsWith("#"))||(!!t.endsWith('"""')||""!==t.trim()))},ee=(e=p.auto_query_delay,t=!1)=>{console.log(c,`Scheduling query to run in ${e} ms. is_auto_submit_query=`,t),d.queryTimeout=setTimeout((()=>A(t)),e)},te=(e=p.auto_query_delay)=>{p.auto_submit&&ee(e,!0)},oe=()=>{console.log(c,"Patching 'Cell.prototype.handle_codemirror_keyevent'");let t=g.prototype.handle_codemirror_keyevent;g.prototype.handle_codemirror_keyevent=function(o,s){d.current_cell_index=n.notebook.get_selected_index();const r=-1!==m.indexOf(s.which),i=F(s),a=z(),l=Z(),u=String.fromCharCode(s.which),h=B(s),f=d.choices.length>1,y=W(s),b=i&&"Enter"===s.key;let k;if(d.is_open&&console.log(c,"Handling keyevent",s.key,"type",s.type,`character '${u}'`,"is special?",r,"isTab?",h,"command plus event?",i,"isAtEndOfLine?",a,"isNonEmpty?",l,"isBackKey?",y,"isRunningCell?",b),this instanceof g&&d.is_open&&(!r||b)&&!i){j(),d.queryTimeout&&clearTimeout(d.queryTimeout),d.current_completion_query&&(d.current_completion_query.abort(),d.current_completion_query=void 0),""===this.get_text().trim()&&h?console.log("Doing nothing on empty cell"):b?(console.log(c,"Completing suggestion because cell is being run"),Y()):h?(k=G(s),console.log(c,"Received CM ignore from Tab key",k)):d.considering_choices&&d.choices.length>1&&L(s)?(s.preventDefault(),V(s.which===_.right),R()):d.considering_choices&&L(s)&&f?(s.preventDefault(),console.log(c,"Recording left/right key")):d.considering_choices&&K(s)&&f?(s.preventDefault(),console.log(c,"Recording up/down key")):d.considering_choices&&y?(console.log(c,"Recording backspace key. Deleting suggestion."),s.preventDefault(),e("#hint-delete-link").click()):d.considering_choices?(console.log(c,"Recording ordinary key. Deleting suggestion."),e("#hint-delete-link").click(),te()):a&&!y?(console.log("Submitting as end of line and not back key"),te()):l&&y?(console.log("Submitting as it is non-empty and back key",p.auto_query_delay),te(1e3)):l&&(console.log("Submitting as the line is non-empty"),te())}return k??t.apply(this,arguments)}},ne=(e,t,o)=>{if(console.log("jupyter_cogram ajax error:",e,t,o),"abort"===t)return;if(408===e?.status||409===e?.status)return void console.log(c,"Request timed out");let n=JSON.parse(e?.responseText??"");le(`${n?.message}`,1e4)},se=({id:t,options:o,options_key:n,min:s,max:r,step:i})=>{let a=e("<span>").addClass("slider-span"),l=e(`<input id="${t}" type="range" min="${s}" max="${r}" step="${i}" value="${o[n]}"/>`),c=e("<span>").attr("id",`${t}-value-span`).addClass("slider-value-span");return c.text(l.val()),l.addClass("cogram-menu-float-input").addClass("slider"),e("body").on("input",`#${t}`,(()=>{let i=parseFloat(e(`#${t}`).val());i>r?i=r:i<s&&(i=s),o[n]=i,X(n,i),e(`#${t}`).val(i),e(`#${t}-value-span`).text(i)})),a.append(c),a.append(l),a.prop("outerHTML")},re=()=>{let t=e('<div id="presets-editor">');t.css("border","1px solid grey").css("border-radius","2px");let o=e("<textarea>");t.append(o);let i=a.fromTextArea(o[0],{lineNumbers:!0,indentUnit:4,autoIndent:!0,mode:"python"});i.setOption("value",p.prompt_presets);let l=s.modal({title:r.msg._("Cogram prompt presets"),body:t,notebook:n.notebook,keyboard_manager:n.notebook.keyboard_manager,default_button:"Save",buttons:{Cancel:{},Save:{class:"btn-primary",click:function(){let e=i.getValue();p.prompt_presets=e,X({prompt_presets:p.prompt_presets})}}}});l.attr("id","presets-modal"),e("body").click((function(t){e(t.target).is("#presets-modal")&&l.modal("hide")})),l.on("shown.bs.modal",(function(){i.refresh()}))},ie=()=>{let t=e(`<span class="dropdown"><a href="#" class="dropdown-toggle" id="cogramlink" data-toggle="dropdown" aria-haspopup="true" aria-controls="cogram_menu">\n    <span class="fa fa-cogs" id="cogram-menu-icon"></span></a>\n    <ul id="cogram_menu" class="dropdown-menu" role="menu" aria-labelledby="cogramlink">\n        <li class="cogram-menu-item" role="none" title="Adjust the creativity">\n            Creativity:\n            ${se({id:"temp-slider",options:p,options_key:"temperature",min:0,max:1,step:.01})}\n        </li>\n        <li class="cogram-menu-item" role="none" title="Change the number of suggestions">\n            Suggestions:\n            ${se({id:"suggestions-slider",options:p,options_key:"n_suggestions",min:1,max:5,step:1})}\n        </li>\n        <li class="cogram-menu-item cogram-checkbox" role="none" title="Change the number of suggestions">\n            Autosuggest:\n            ${(({id:t,options:o,options_key:n})=>{let s=o[n]?"checked":"unchecked",r=e(`<input id="${t}" type="checkbox" ${s}/>`);return e("body").on("change",`#${t}`,(()=>{let s=e(`#${t}`).is(":checked");o[n]=s,X(n,s)})),r.prop("outerHTML")})({id:"auto-submit-checkbox",options:p,options_key:"auto_submit"})}\n        </li>\n    </ul>\n</span>`);if(p.demo_mode){let o=e(`<li class="cogram-menu-item" role="none" title="Change the number of suggestions">\n            Backend URL:\n            ${(({id:t,options:o,options_key:n,default_text:s})=>{let r=e('<span style="margin-left:20px">'),i=e(`<input id="${t}" type="text" value="${s}"/>`);return i.addClass("cogram-menu-text-input"),e("body").on("input",`#${t}`,(()=>{let s=e(`#${t}`).val();o[n]=s,X(n,s)})),r.append(i),r.prop("outerHTML")})({id:"backend-url-input",options:p,options_key:"backend_url",default_text:p.backend_url})}\n        </li>`),n=e(`<li class="divider" role="none"></li>\n        <li class="cogram-menu-item" role="none" title="Change the prompt presets">\n            ${(()=>{let t=e('<a href="#" id="presets-link" role="menuitem" style="padding-left:0;">Presets</a>');return e("body").on("click","#presets-link",re),t.prop("outerHTML")})()}\n        </li>`);t.find("ul").append(o).append(n)}return t},ae=()=>{let t=e("<button/>").attr("id","cogram-status").attr("class","btn btn-default").attr("title","Cogram status").attr("style","display: none;"),o=e("<i/>").attr("id","cogram-spinner").attr("style","color: green;").attr("class","fa fa-circle-o-notch");t.append(o),e("#cogram-button-group").append(t)},le=(t,o=2e3)=>{console.log(c,"Showing alert message");const n=e("#info-panel-content").html();let s=e("<div class='mui--text-body2 alert-message'>"+t+"</div>");I(s),o&&setTimeout((()=>{n&&e("#info-panel-content").html(n),e("#jupyter-cogram-info-panel").hide()}),o)},ce=(t,o=5e3)=>{console.log(c,"Showing success message with timeout",o);const n=e("#info-panel-content").html();let s=e("<div class='mui--text-body2 success-message'>"+t+"</div>");I(s),o&&setTimeout((()=>{n&&e("#info-panel-content").html(n),e("#jupyter-cogram-info-panel").hide()}),o)},ue=(t=null)=>{let o=e('<div id="info-panel-content"/>');t?o.html(t):o.text("Please submit your API token");let n=e('<form id="token_submit_form"><div class="mui-textfield"><input type="text"name="api_token" placeholder="Your API token" spellcheck="false"class="mui--is-empty mui--is-pristine mui--is-touched"></div><button id="cogram_token_submit" class="mui-btn mui-btn--primary" type="submit">Submit</button></form>');return o.append(n),e("body").on("submit","#token_submit_form",(t=>{t.preventDefault();const o=t.target,[n,s]=(t=>{console.log(c,"Submitting token",t);let o,n=!1;return e.post({url:"/token",data:JSON.stringify({auth_token:t}),headers:{"X-XSRFToken":h("_xsrf")},dataType:"json",async:!1,contentType:"application/json",success:function(e){d.auth_token=t,H(!0),n=!0},error:function(e,t,n){let s=JSON.parse(e.responseText);o=`Error ${e.status}: ${s.error}`,console.log("Have error msg from `submitToken()`",o)}}),console.log(c,"Token submission completed. Success?",n),[n,o]})(o?.api_token?.value);n?ce("Thanks, your token looks good 🎉",2e3):le(s,5e3)})),o},pe=()=>{e("#hint-accept-link").click((e=>{e.preventDefault(),O()})),e("#hint-delete-link").click((e=>{e.preventDefault(),(()=>{ke("Suggestions deleted",d.submission_metadata);const e=d.pre_cursor+d.post_cursor,t=f();t.set_text(e),b({text:d.pre_cursor,_cell:t}),w(),ge(),C()})()})),e("#hint-left-link").click((e=>{e.preventDefault(),V(!1),R()})),e("#hint-right-link").click((e=>{e.preventDefault(),V(!0),R()}))},de=(t,o=null,n="-=14")=>{let s=e('<div class="mui-panel" id="cogram-hint"/>');o&&s.addClass(o);let r=e(`<div class="mui--text-body2" id="cogram-hint-text">${t}</div>`);s.append(r);const i=(()=>{const t=e(".cell.code_cell.selected .CodeMirror-cursors").children().last();return t.length?[t.css("left"),t.css("top")]:(console.log(c,"Could not find cursors in cell, returning [0, 0]"),[0,0])})();s.css("left",i[0]).css("top",i[1]),s.css("left","+=102").css("top",n),e(".cell.code_cell.selected .inner_cell").append(s),pe()},ge=()=>e("#cogram-hint").remove(),_e=()=>{var e,t;ge(),de((e="&nbsp &nbsp",t="",d.choices.length>1&&(t+=`<a href="#" class="hint-accept" id="hint-right-link">Next (→)</a> ${e} <a href="#" class="hint-accept" id="hint-left-link">Previous (←)</a> ${e}`),t+`<a href="#" class="hint-accept" id="hint-accept-link">Accept (Tab)</a> ${e} <a href="#" class="hint-accept" id="hint-delete-link">Delete (⌫)</a>`))},me=e=>{let t=document.createElement("link");t.type="text/css",t.rel="stylesheet",t.href=o.toUrl(e),document.getElementsByTagName("head")[0].appendChild(t)},he="The Cogram API server is unavailable. Please refresh and try again. If this keeps happening, please contact support@cogram.ai",fe=()=>{const t=J();"ok"===t?(console.log(c,"Checking if version is up to date..."),e.get({url:"/checkVersion",dataType:"JSON",async:!1,success:function(e){d.version_is_up_to_date=!0},error:P})):"unavailable"===t?le(he,1e4):I(t?ue(t):ue())},ye=t=>{d.version_is_up_to_date=!0;let o=`<div class="mui--text-subhead">Successfully upgraded to version ${t?.new_version} 🎉<span class="mui--text-body2"><br>Please refresh your notebook:</span></div>`+(e("body").on("click","#refresh_button",(()=>{window.location.reload()})),'<button id="refresh_button" class="mui-btn mui-btn--primary">Refresh</button>');ce(o,p.upgrade_message_timeout)},be=(e,t,o)=>{d.version_is_up_to_date=!1;let n=JSON.parse(e.responseText);d.version_is_up_to_date=!1,console.log(c,"Auto upgrade error:",n),le(`<span class="mui--text-body2">${n?.message}</span>`,1e4)},ke=(t,o={})=>{e.post({url:"/event",headers:{"X-XSRFToken":h("_xsrf")},data:JSON.stringify({name:t,write_key:"H8Hgh58mRvFUDlCuFBJ6CulsfM9d2EO9",properties:{...o,timestamp:(new Date).toISOString()}}),dataType:"json",contentType:"application/json"})},ve=()=>{(console.log(c,"Upgrading package"),e.post({url:"/upgrade",headers:{"X-XSRFToken":h("_xsrf")},dataType:"json",contentType:"application/json",success:ye,error:be})).then((e=>console.log(c,"`autoUpgrade()` result:",e))).catch((e=>console.log(c,"Error in `autoUpgrade()`:",e)))},xe=()=>{(()=>{let t=e("<button/>").attr("id","cogram-config").attr("class","btn btn-default").attr("title","Cogram config");return t.append(ie()),t})().insertBefore(e("#cogram-status"))},Te=()=>{console.log(c,"Initializing extension..."),n.toolbar.add_buttons_group([n.keyboard_manager.actions.register({help:"Launch jupyter-cogram",icon:"fas fa-link",handler:M},"create-jupyter-cogram-from-notebook","Cogram")],"cogram-button-group"),e(".fas.fa-link.fa").replaceWith(`<img id="cogram-button-logo" src="${u}" style="max-height:16px;"alt="Cogram">`),ae(),d.is_launch=!0,M(!0),d.is_launch=!1,fe(),Ce(),(()=>{let t,o;d.auth_token||console.log(c,"No valid token. Skipping launch message."),e.get({url:"/launch",headers:{"X-XSRFToken":h("_xsrf")},async:!1,dataType:"JSON",success:e=>{console.log(c,"Have launch result",e),t=e?.status,o=e?.msg},error:(e,t,o)=>{console.log(c,"Have launch result error",e)}}),o&&["first_launch","new_version"].includes(t)&&(console.log(c,"Will show success message.",o),ce(o,6e4))})(),xe()},Ce=()=>{e.get({url:"/config",async:!1,dataType:"JSON",success:function(e){e&&(console.log(c,"Received config data from server",e),p={...p,...e})}})};function Se(){me("//cdn.muicss.com/mui-0.10.3/css/mui.min.css"),me("./jupyter_cogram.css"),oe(),function(){console.log(c,"Patching 'CodeCell.prototype.execute'");let e=g.prototype.execute;g.prototype.execute=function(t){return $(),e.apply(this,arguments)}}(),(()=>{let t=e("<div/>").attr("id","jupyter-cogram-info-panel").attr("class","cogram_info_panel_display mui-panel mui--text-subhead mui--z2").attr("style","display: none;"),o=e("<div id='cogram_token_close'>x</div>");t.append(o).append(e('<div id="info-panel-content"/>')),e("body").on("click","#cogram_token_close",(()=>e("#jupyter-cogram-info-panel").hide())),e("body").on("focus","#jupyter-cogram-info-panel, #backend-url-input, #temp-slider",(()=>n.keyboard_manager.disable())),e("body").on("blur","#jupyter-cogram-info-panel, #backend-url-input, #suggestions-slider",(()=>n.keyboard_manager.enable())),e("#site").prepend(t)})(),n.notebook.kernel?(console.log(c,"Initialising with Kernel ready!"),Te()):(console.log(c,"Kernel not ready. Initialising later"),n.notebook.events.one("kernel_ready.Kernel",(()=>Te())))}return{load_jupyter_extension:Se,load_ipython_extension:Se}}));